name: CI

on:
  push:
    branches:
      - '*'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  COVERAGE: true
  RAILS_ENV: test
  NODE_ENV: test
  DATABASE_URL_TEST: postgres://postgres:postgres@localhost:5432/Forem_test
  DATABASE_NAME_TEST: Forem_test
  KNAPSACK_PRO_FIXED_QUEUE_SPLIT: true
  POSTGRES_PASSWORD: postgres
  KNAPSACK_PRO_LOG_LEVEL: info
  YARN_ENABLE_HARDENED_MODE: 0

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      E2E: true

    steps:
      - uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Cache pre-compiled assets
        uses: actions/cache@v4
        id: assetscache
        with:
          path: |
            public/assets
          key: ${{ runner.os }}-compiled-assets-v3-${{ hashFiles( 'app/assets/**', 'app/javascript/**', '**/package.json', '**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-compiled-assets-v3-
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: yarn
        if: steps.assetscache.outputs.cache-hit != 'true'
      - run: yarn install --immutable
        if: steps.assetscache.outputs.cache-hit != 'true'
      - run: bundle exec rails assets:precompile
        if: steps.assetscache.outputs.cache-hit != 'true'

  rspec:
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 20
    env:
      KNAPSACK_PRO_CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
      KNAPSACK_PRO_CI_NODE_INDEX: ${{ matrix.ci_node_index }}
      KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC }}

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [8]
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7]

    steps:
      - uses: actions/checkout@v4
      - name: Restore compiled assets
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: true
          path: |
            public/assets
          key: ${{ runner.os }}-compiled-assets-v3-${{ hashFiles('app/assets/**', 'app/javascript/**', '**/package.json', '**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-compiled-assets-v3-
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: yarn
      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: cp .env_sample .env
      - run: bundle exec rails db:test:prepare
      - name: Configure Datadog Test Optimization
        uses: datadog/test-visibility-github-action@v2
        with:
          languages: ruby
          api_key: ${{ secrets.DD_API_KEY }}
          site: datadoghq.eu
      - name: RSpec
        run: bin/knapsack_pro_rspec

  jest:
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: yarn
      - run: yarn install --immutable
      - run: yarn test --colors --ci --reporters="jest-junit" --reporters="default"

  # cypress:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 20
  #   needs: [build]
  #   env:
  #     E2E: true

  #   services:
  #     postgres:
  #       image: postgres:13-alpine
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       ports:
  #         - 5432:5432
  #     redis:
  #       image: redis
  #       ports:
  #         - 6379:6379

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ci_node_total: [8]
  #       ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7, non-seed]

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Restore compiled assets
  #       uses: actions/cache/restore@v4
  #       with:
  #         fail-on-cache-miss: true
  #         path: |
  #           public/assets
  #         key: ${{ runner.os }}-compiled-assets-v3-${{ hashFiles('app/assets/**', 'app/javascript/**', '**/package.json', '**/yarn.lock') }}
  #         restore-keys: ${{ runner.os }}-compiled-assets-v3-
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #         cache: yarn
  #     - run: yarn install --immutable
  #     - name: setup ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         bundler-cache: true
  #     - run: cp .env_sample .env
  #     - run: bundle exec rails db:test:prepare
  #     - run: yarn cypress install
  #     - name: cypress
  #       env:
  #         CYPRESS_RAILS_HOST: localhost
  #         CYPRESS_RAILS_PORT: 3000
  #         KNAPSACK_PRO_CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
  #         KNAPSACK_PRO_CI_NODE_INDEX: ${{ matrix.ci_node_index }}
  #         KNAPSACK_PRO_TEST_SUITE_TOKEN_CYPRESS: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_CYPRESS }}
  #         KNAPSACK_PRO_TEST_FILE_PATTERN: 'cypress/e2e/seededFlows/**/*.spec.js'
  #       run: bin/knapsack_pro_cypress
  #       if: ${{ matrix.ci_node_index != 'non-seed' }}
  #     - name: cypress non-seed
  #       run: CREATOR_ONBOARDING_SEED_DATA=1 E2E_FOLDER=creatorOnboardingFlows E2E=true bin/rails cypress:run
  #       if: ${{ matrix.ci_node_index == 'non-seed' }}
  #     - name: Upload Cypress artifacts
  #       uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: cypress-artifacts-${{ matrix.ci_node_index }}
  #         path: |
  #           tmp/cypress_screenshots
  #           cypress/logs
